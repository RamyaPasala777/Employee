"use strict";

sap.ui.define(["sap/ui/rta/command/CommandFactory", "../../../cpe/feature-service", "../../../cpe/quick-actions/utils", "../../../utils/core", "../simple-quick-action-base"], function (CommandFactory, _____cpe_feature_service, _____cpe_quick_actions_utils, _____utils_core, ___simple_quick_action_base) {
  "use strict";

  const FeatureService = _____cpe_feature_service["FeatureService"];
  const pageHasControlId = _____cpe_quick_actions_utils["pageHasControlId"];
  const getControlById = _____utils_core["getControlById"];
  const SimpleQuickActionDefinitionBase = ___simple_quick_action_base["SimpleQuickActionDefinitionBase"];
  const ENABLE_SEMANTIC_DATE_RANGE_FILTER_BAR = 'enable-semantic-daterange-filterbar';
  const CONTROL_TYPE = 'sap.ui.comp.smartfilterbar.SmartFilterBar';

  /**
   * Quick Action for toggling the visibility of "semantic date range" for filterbar fields.
   */
  class ToggleSemanticDateRangeFilterBar extends SimpleQuickActionDefinitionBase {
    constructor(context) {
      super(ENABLE_SEMANTIC_DATE_RANGE_FILTER_BAR, [], '', context);
    }
    forceRefreshAfterExecution = true;
    isUseDateRangeTypeEnabled = false;
    initialize() {
      if (FeatureService.isFeatureEnabled('cpe.beta.quick-actions') === false) {
        return;
      }
      const controls = this.context.controlIndex[CONTROL_TYPE] ?? [];
      for (const control of controls) {
        const isActionApplicable = pageHasControlId(this.context.view, control.controlId);
        const modifiedControl = getControlById(control.controlId);
        if (isActionApplicable && modifiedControl) {
          this.isUseDateRangeTypeEnabled = modifiedControl.getProperty('useDateRangeType');
          this.control = modifiedControl;
        }
      }
    }
    get textKey() {
      return this.isUseDateRangeTypeEnabled ? 'V2_QUICK_ACTION_LR_DISABLE_SEMANTIC_DATE_RANGE_FILTER_BAR' : 'V2_QUICK_ACTION_LR_ENABLE_SEMANTIC_DATE_RANGE_FILTER_BAR';
    }
    async execute() {
      const {
        flexSettings
      } = this.context;
      const modifiedValue = {
        changeType: 'appdescr_ui_generic_app_changePageConfiguration',
        reference: flexSettings.projectId,
        parameters: {
          parentPage: {
            component: 'sap.suite.ui.generic.template.ListReport',
            entitySet: this.control.getEntitySet()
          },
          entityPropertyChange: {
            propertyPath: 'component/settings/filterSettings/dateSettings',
            operation: 'UPSERT',
            propertyValue: {
              useDateRange: !this.isUseDateRangeTypeEnabled
            }
          }
        }
      };
      const command = await CommandFactory.getCommandFor(this.control, 'appDescriptor', modifiedValue, null, flexSettings);
      this.isUseDateRangeTypeEnabled = !this.isUseDateRangeTypeEnabled;
      return [command];
    }
  }
  var __exports = {
    __esModule: true
  };
  __exports.ENABLE_SEMANTIC_DATE_RANGE_FILTER_BAR = ENABLE_SEMANTIC_DATE_RANGE_FILTER_BAR;
  __exports.ToggleSemanticDateRangeFilterBar = ToggleSemanticDateRangeFilterBar;
  return __exports;
});
//# sourceMappingURL=lr-enable-semantic-date-range-filter-bar.js.map